#!/usr/bin/env zsh

source ~/.private.zsh

MY_THEME="dark"

bindkey -v
# bindkey '^[[A' history-substring-search-up
# bindkey '^[[B' history-substring-search-down

bold=$(tput bold)
normal=$(tput sgr0)

export VISUAL=nvim
export EDITOR=nvim
export GIT_EDITOR=nvim

alias vi=nvim
alias vim=nvim

if [ ! -r ~/.zplug/init.zsh ]; then
  echo "Installing zplug to ~/.zplug";
  git clone https://github.com/chriskjaer/zplug ~/.zplug
fi;
source ~/.zplug/init.zsh

zplug "zplug/zplug", hook-build:"zplug --self-manage"
# zplug "chriskempson/base16-shell"
zplug "momo-lab/zsh-abbrev-alias"
zplug "peterhurford/up.zsh"
# zplug "jeffreytse/zsh-vi-mode"
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "zsh-users/zsh-history-substring-search", defer:2
zplug "joshskidmore/zsh-fzf-history-search"
# zplug "plugins/asdf", from:oh-my-zsh, defer:2

# Install plugins if there are plugins that have not been installed
if ! zplug check; then
  zplug install
fi

zplug load

# dark() {
#   base16_dracula
# }
# light() {
#   base16_harmonic-light
# }

# e() {
#   emacsclient -na /Applications/Emacs.app/Contents/MacOS/Emacs $@ >/dev/null 2>&1 &
# }

# bindkey -v

# bindkey '^[[A' history-substring-search-up
# bindkey '^[[B' history-substring-search-down
# bindkey -M vicmd 'k' history-substring-search-up
# bindkey -M vicmd 'j' history-substring-search-down

# bindkey '^F' autosuggest-accept
# bindkey -M vicmd '^F' autosuggest-accept

# bindkey -M viins " " __abbrev_alias::magic_abbrev_expand

abbrev-alias -c ae="nvim ~/.config/alacritty/alacritty.yml"
abbrev-alias -c te="nvim ~/.config/tmux/tmux.conf"
abbrev-alias -c ve="(cd ~/.config/nvim && nvim init.lua)"
abbrev-alias -c vep="(cd ~/.config/nvim && nvim lua/plugins.lua)"
abbrev-alias -c xe="nvim ~/.config/xmonad/xmonad.hs"
abbrev-alias -c ze="nvim ~/.zshrc"
abbrev-alias -c we="nvim ~/.config/wezterm/wezterm.lua"

# abbrev-alias -c tls="tmux ls"
# abbrev-alias -c t="tmux new -t"
abbrev-alias -c ta="tmux a"

abbrev-alias -c gco="git checkout"
abbrev-alias -c gcob="git checkout -b"
abbrev-alias -c gcm="git checkout master"
abbrev-alias -c gcd="git checkout develop"
abbrev-alias -c gcl="git checkout 2019.2.0"
abbrev-alias -c gl="git pull"
abbrev-alias -c gp="git push"
abbrev-alias -c gpf="git push --force"
abbrev-alias -c gcmsg="git commit -m"
abbrev-alias -c gaa="git add --all"
abbrev-alias -c gs="git status"
abbrev-alias -c gb="git branch"
abbrev-alias -c gbd="git branch -D"
abbrev-alias -c gmd="git merge develop"
abbrev-alias -c gci="git commit --allow-empty -m 'ci: bump'"

abbrev-alias -c gcp="git cherry-pick"

abbrev-alias -c glg="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(cyan)[%G?]%Creset' --abbrev-commit"
abbrev-alias -c glgs="git log --show-signature"

abbrev-alias -c gwta="git worktree add"
abbrev-alias -c gwtab="git worktree add -b"
abbrev-alias -c gwtl="git worktree list"
abbrev-alias -c gwtp="git worktree prune"
abbrev-alias -c gwtr="git worktree remove"
abbrev-alias -c gwtrf="git worktree remove --force"

docker-socket() {
  docker context inspect | jq -r '.[].Endpoints.docker.Host'
}

lazydocker() {
  DOCKER_HOST=`docker-socket` command lazydocker
}

abbrev-alias -c lad="lazydocker"
abbrev-alias -c lag="lazygit"

abbrev-alias -c c="chezmoi"
abbrev-alias -c cg="chezmoi git"

abbrev-alias -c cat="bat"

abbrev-alias -c ports="lsof -i | grep LISTEN"

abbrev-alias -c v="nvim ."

GG="$HOME/dev/greenlight"

SERVER_OPTIONS=(-Dgreenlight.application.properties=conf/application-dev.properties -Dlogback.configurationFile=logback.xml -classpath "target/*:target/lib/*")

export GGREPOSERVICE="$GG/repo" # for compat with other scripts
export GGCLIENTSERVICE="$GG/client" # for compat with other scripts
export POLICY_DIR="$GG/authz/resources" # for repo svc to know where authz is

# JAVA11="$HOME/.jabba/jdk/adopt@1.11.0-9/bin/java"
# JAVA8="$HOME/.jabba/jdk/adopt@1.8.0-265/bin/java"

disable-private-npm() {
  mv ~/.npmrc ~/.npmrc_disable
}
enable-private-npm() {
  mv ~/.npmrc_disable ~/.npmrc
}

clean-npmrc() {
  if [ "$(cat ~/.npmrc | wc -l)" -eq "2" ]; then
    sed -i "2 i $GG_NPM_REPO" ~/.npmrc
  fi
}

gggm() {
  cd "$GG/local"
  git config --global user.email jeff.hertzler@greenlight.guru
  ./gg.sh "good morning"
  git config --global user.email jeffhertzler@gmail.com
}

ggd() { (cd "$GG/local" && ./docker.sh $@) }
gg() { (cd "$GG/local" && ./gg.sh $@) }
# ggpdm() { http POST "local.greenlight.guru:8022/admin/refreshSearch?orgPath=testorg_develop&stackId=local" "Authorization: Bearer ${GG_JWT}" }
# gga() { (cd "$GG/authn/target" && $JAVA11 -jar greenlight-authentication-service.jar) }
# ggab() { (cd "$GG/authn" && mvn clean install -Dmaven.test.skip=true) }
ggkey() { (gggm); source ~/.zshrc }
ggkeyr() { (BROWSER=/usr/bin/echo gggm); source ~/.zshrc }
ggpull() {
  echo "pulling ${bold}auth${normal}..."
  (cd "$GG/authn" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}ah${normal}..."
  (cd "$GG/ah" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}authz${normal}..."
  (cd "$GG/authz" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}common${normal}..."
  (cd "$GG/common" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}grpc${normal}..."
  (cd "$GG/grpc" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}local${normal}..."
  (cd "$GG/local" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}org${normal}..."
  (cd "$GG/org" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}repo${normal}..."
  (cd "$GG/repo" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}risk${normal}..."
  (cd "$GG/risk" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}pdm${normal}..."
  (cd "$GG/pdm" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}routing${normal}..."
  (cd "$GG/routing" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}identity${normal}..."
  (cd "$GG/identity" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}graphql${normal}..."
  (cd "$GG/graphql" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}legacy-proxy${normal}..."
  (cd "$GG/legacy-proxy" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}notification${normal}..."
  (cd "$GG/notification" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}legacy-frontend${normal}..."
  (cd "$GG/frontend/legacy" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}risk-frontend${normal}..."
  (cd "$GG/frontend/risk" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}design-system${normal}..."
  (cd "$GG/design-system" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
  echo "pulling ${bold}node-common${normal}..."
  (cd "$GG/node-common" && echo "${bold}$(git branch --show-current)${normal}" && git pull)
}

vmdbimport() {
  sed -i 's/`forge`/`homestead`/g' "${1:-mathbots.dump}"
  mysql -h 0.0.0.0 -P 33061 -psecret -u homestead homestead < "${1:-mathbots.dump}"
}
vmldbimport() {
  ssh forge@mathbots.vimmelearning.com mysql -u forge -plDBxQ8BZy42VJfnuKp8G < "${1:-mathbots.dump}"
}
vlcdbimport() {
  ssh forge@classrooms.app.vimmelearning.com mysql -u forge -pBpvvfWCrPjxmlgakDo9n < "${1:-vimme_classrooms.dump}"
}
vllivedbimport() {
  ssh forge@old-app.vimmelearning.com mysql -u forge -pBpvvfWCrPjxmlgakDo9n < "${1:-vimme.dump}"
}
vldbimport() {
  sed -i 's/`forge`/`homestead`/g' "${1:-vimme.dump}"
  mysql -h 0.0.0.0 -P 33060 -psecret -u homestead homestead < "${1:-vimme.dump}"
}
vedbimport() {
  sed -i 's/`forge`/`homestead`/g' "${1:-nonilearn.dump}"
  mysql -h 0.0.0.0 -P 33060 -psecret -u homestead homestead < "${1:-nonilearn.dump}"
}
vmldbdump() {
  ssh forge@mathbots.vimmelearning.com "$MATHBOTS_MYSQLDUMP" > "${1:-mathbots.dump}"
}
vldbdump() {
  ssh forge@old-app.vimmelearning.com "$VIMME_MYSQLDUMP" > "${1:-vimme.dump}"
}
vldbdumpassignments() {
  ssh forge@old-app.vimmelearning.com "$VIMME_MYSQLDUMP_ASSIGNMENTS" > "${1:-vimme-assignments.dump}"
}
vldbdumpclassrooms() {
  ssh forge@old-app.vimmelearning.com "$VIMME_MYSQLDUMP_CLASSROOMS" > "${1:-vimme_classrooms.dump}"
}
vedbdump() {
  ssh forge@nonilearnreporting.com "$NONILEARN_MYSQLDUMP" > "${1:-nonilearn.dump}"
}
vlldbdump() {
  mysqldump -h 0.0.0.0 -P 33060 -u homestead -psecret --column-statistics=0 --no-tablespaces homestead > "${1:-homestead.dump}"
}
vlssh() {
  ssh forge@old-app.vimmelearning.com "$@"
}
vlscp() {
  scp "$1" "forge@old-app.vimmelearning.com:old-app.vimmelearning.com/storage/students/$2"
}

# ggrepo() {
#   if [ ! $# = 1 ]; then
#     cd "$SERVER_REPO_DIR"
#   else
#     (cd "$SERVER_REPO_DIR"; ./gg.sh $@)
#   fi
# }

# java11() { $JAVA11 $@ }
# java8() { $JAVA8 $@ }

abbrev-alias -c cdgg="cd $GG"

abbrev-alias -c gt="gotestsum"

abbrev-alias -c vdb="docker exec -it -u docker vimme-app-1 /bin/bash"

abbrev-alias sshm="ssh $MAC_REMOTE"
scpm() { scp $1 "$MAC_REMOTE:$2" "${@:3}" }

abbrev-alias -c bubu="brew update && brew upgrade && brew cleanup"
#
# abbrev-alias -c code="code-insiders"

abbrev-alias -c reload="source ~/.zshrc"

abbrev-alias -c ls="exa"
abbrev-alias -c la="exa -lag"

stripe() {
  docker run --network=host --rm -it stripe/stripe-cli "$@"
}

nvu() {
  wget https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage
  sudo chmod +x nvim.appimage
  sudo chown root:root nvim.appimage
  sudo mv nvim.appimage /usr/local/bin/nvim
}

wtu() {
  wget https://github.com/wez/wezterm/releases/download/nightly/WezTerm-nightly-Ubuntu18.04.AppImage -O wezterm.appimage
  # wget https://github.com/wez/wezterm/releases/download/20220624-141144-bd1b7c5d/WezTerm-20220624-141144-bd1b7c5d-Ubuntu18.04.AppImage -O wezterm.appimage
  sudo chmod +x wezterm.appimage
  # sudo chown root:root wezterm.appimage
  sudo mv wezterm.appimage ~/Applications
}

rcu() {
  rustup update
  cargo install-update --all
}

gou() {
  bash <(curl -sL https://git.io/go-installer)
}

abbrev-alias -c tsu="sudo tailscale up --accept-routes --accept-dns"
abbrev-alias -c tsd="sudo tailscale down"

# set_java_version() {
#   if [[ "$(\asdf current java 2>&1)" =~ "^([-_.a-zA-Z0-9]+)[[:space:]]*\(set by.*$" ]]; then
#     export JAVA_HOME="$(\asdf where java ${match[1]})/Contents/Home"
#   else
#     export JAVA_HOME=''
#   fi
# }

# set_java_version

# asdf_java_wrapper() {
#   if \asdf "$@"; then
#     set_java_version
#   fi
# }

# alias asdf='asdf_java_wrapper'
# export JAVA_HOME="$(/usr/libexec/java_home -v)"
# export JAVA_HOME="$(/usr/libexec/java_home)"

# export JAVA_HOME=`type -p javac|awk '{ print $3 }'|xargs readlink -f|xargs dirname|xargs dirname`
# export JAVA_HOME="$(jabba which default)"
# export PATH="$JAVA_HOME/bin:$PATH"

# abbrev-alias -c ci="composer install"
# abbrev-alias -c cu="composer update"
# abbrev-alias -c cgo="composer global outdated"
# abbrev-alias -c cgu="composer global update"

# # allow usage of C-q and C-s shortcuts other places
# stty -ixon
# stty start undef
# stty stop undef

# fnm
# eval "$(fnm env --multi --shel=zsh --use-on-cd)"

eval "$(starship init zsh)"
eval "$(zoxide init zsh)"

export FZF_DEFAULT_OPTS='--color=bg+:#302D41,bg:#1E1E2E,spinner:#F8BD96,hl:#F28FAD --color=fg:#D9E0EE,header:#F28FAD,info:#DDB6F2,pointer:#F8BD96 --color=marker:#F8BD96,fg+:#F2CDCD,prompt:#DDB6F2,hl+:#F28FAD'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# bun completions
[ -s "/home/jeffhertzler/.bun/_bun" ] && source "/home/jeffhertzler/.bun/_bun"

# Bun
export BUN_INSTALL="/home/jeffhertzler/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

export GG_BANNER_LEVEL="accent"

[ -s "/home/jeffhertzler/.jabba/jabba.sh" ] && source "/home/jeffhertzler/.jabba/jabba.sh"

[ -z "$COLORFGBG" ] && export COLORFGBG='7;0'

export LOGBACK_APPENDER="pretty"

# export PHPBREW_RC_ENABLE=1

# source /home/jeffhertzler/.phpbrew/bashrc
export GOROOT=/home/jeffhertzler/.go
export GOPATH=/home/jeffhertzler/dev/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin

export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
